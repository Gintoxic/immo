{
fa<-getImmo(region=region,maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-1L
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/",region_, "_",date_, ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}
str(fa)
as.logical(fa$privateOffer)
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (region in regionList)
{
fa<-getImmo(region=region,maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-1L
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/",region_, "_",date_, ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (region in regionList)
{
fa<-getImmo(region=region,maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-1L
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/",region_, "_",date_, ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}
source('D:/Work/immo/dbFunctions.R')
source('D:/Work/immo/dbFunctions.R')
regionList<-"Thueringen"
regionList<-"Thueringen"
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (region in regionList)
{
fa<-getImmo(region=region,maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-1L
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/",region_, "_",date_, ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}
filenameRda<-paste("../immoData/",date_,"/"  ,qtype,"_",date_       ,region_, "_", ".Rdata",sep="")
qtype<-1L
filenameRda<-paste("../immoData/",date_,"/"  ,qtype,"_",date_       ,region_, "_", ".Rdata",sep="")
filenameRda
filenameRda<-paste("../immoData/",date_,"/"  ,qtype,"_",date_,"_"   ,region_,  ".Rdata",sep="")
filenameRda
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
filenameRda
vec<-c(1, "Wohnung-Miete",2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
matrix(vec, ncol = 2)
matrix(vec, ncol = 2, byrow = T)
as.data.frame(matrix(vec, ncol = 2, byrow = T))
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
qframe
dim(qframe)
dim(qframe)[1]
vec<-c(1, "Wohnung-Miete",2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
dim(qframe)
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for typeind in 1:dim(qframe)[1]
{
for (region in regionList)
{
qtype<-qframe$qtype[typeind]
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
vec<-c(1, "Wohnung-Miete",2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
dim(qframe)
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for typeind in 1:dim(qframe)[1]
{
for (region in regionList)
{
qtype<-qframe$qtype[typeind]
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-qframe$qtype[typeind]
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
qframe$qtype[typeind]
as.integer(qframe$qtype[typeind])
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(qframe$qtype[typeind])
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
qr<-paste("select max(importdate) from immolog where region='",region, "' and qtype=",max(fa$qtype), sep="")
qr
vec<-c("Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
vec
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(qframe$qtype[typeind])
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
vec<-c(2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(qframe$qtype[typeind])
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
fa
qframe
typeind
qframe$qtype[typeind]
as.integer(qframe$qtype[typeind])
as.integer(as.character(qframe$qtype[typeind]))
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
vec<-c(1, "Wohnung-Miete",2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
vec<-c(2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
dim(qframe)
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(as.character(qframe$qtype[typeind]))
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
load("../immoData/DEU_adm1.Rdata")
regionList<-names(table(gadm$NAME_1))
regionList[16]<-"Thueringen"
regionList[1]<-"Baden-Wuerttemberg"
#regionList<-"Nordrhein-Westfalen"
#regionList<-regionList[2:16]
#regionList<-"Baden-Wuerttemberg"
#regionList<-"Thueringen"
#region<-"Thueringen"
vec<-c(1, "Wohnung-Miete",2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
vec<-c(2,"Haus-Miete",3,"Wohnung-Kauf",4,"Haus-Kauf",5,"Grundstueck-Kauf",6, "Versteigerung")
qframe<-as.data.frame(matrix(vec, ncol = 2, byrow = T))
colnames(qframe)<-c("qtype","qstring")
dim(qframe)
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(as.character(qframe$qtype[typeind]))
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
library(sp)
library(XML)
library(rjson)
library(dplyr)
source("getImmo.R")
source("dbFunctions.R")
for (typeind in 1:dim(qframe)[1])
{
for (region in regionList)
{
qtype<-as.integer(as.character(qframe$qtype[typeind]))
fa<-getImmo(region=region,type=qframe$qstring[typeind],maxPages = 10000)
# attributes<-as.data.frame(matrix(unlist(strsplit(f$attributes, ";")), nrow=dim(f)[1], ncol=3, byrow = T), stringsAsFactors = F)
# colnames(attributes)<-c("price","area", "rooms")
# fa<-cbind(f,attributes)
curDate<-as.character(Sys.Date())
fa$importdate<-curDate
fa$region<-region
fa$qtype<-qtype
region_<-gsub("/","_",region)
date_<-format(Sys.Date(), "%Y%m%d")
tit<-fa$title%>%lapply(function(x) if(is.character(x)|is.factor(x)) gsub("\u0022","",x) else x)%>%unlist() ### """
fa$title<-tit
colnames(fa)[9]<-"attribs"
fa$id<-as.integer(fa$id)
fa$privateOffer<-as.logical(fa$privateOffer)
dir.create(paste("../immoData/",date_, sep=""))
#filenameCSV<-paste("../immoData/",date_,"/",region_, "_",date_, ".csv",sep="")
#write.table(fa,file =  filenameCSV, row.names = F, sep=";", fileEncoding="UTF-8", quote = TRUE)
filenameRda<-paste("../immoData/",date_,"/"  ,date_,"_",qtype,"_"  ,region_,  ".Rdata",sep="")
save("fa", file=filenameRda)
writeImmoLog(fa, region, curDate)
writeImmoList(fa)
}}
